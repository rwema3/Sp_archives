

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jan 29 19:56:52 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Version 2.20
    11                           ; Generated 12/02/2020 GMT
    12                           ; 
    13                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0000                     	;# 
    45     0001                     	;# 
    46     0002                     	;# 
    47     0003                     	;# 
    48     0004                     	;# 
    49     0005                     	;# 
    50     0006                     	;# 
    51     0007                     	;# 
    52     0008                     	;# 
    53     0009                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000D                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0013                     	;# 
    65     0014                     	;# 
    66     0015                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001B                     	;# 
    74     001B                     	;# 
    75     001C                     	;# 
    76     001D                     	;# 
    77     001E                     	;# 
    78     001F                     	;# 
    79     0081                     	;# 
    80     0085                     	;# 
    81     0086                     	;# 
    82     0087                     	;# 
    83     0088                     	;# 
    84     0089                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0091                     	;# 
    89     0092                     	;# 
    90     0093                     	;# 
    91     0094                     	;# 
    92     0098                     	;# 
    93     0099                     	;# 
    94     009C                     	;# 
    95     009D                     	;# 
    96     009E                     	;# 
    97     009F                     	;# 
    98     010C                     	;# 
    99     010D                     	;# 
   100     010E                     	;# 
   101     010F                     	;# 
   102     018C                     	;# 
   103     018D                     	;# 
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     0008                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001B                     	;# 
   134     001B                     	;# 
   135     001C                     	;# 
   136     001D                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     0086                     	;# 
   142     0087                     	;# 
   143     0088                     	;# 
   144     0089                     	;# 
   145     008C                     	;# 
   146     008D                     	;# 
   147     008E                     	;# 
   148     0091                     	;# 
   149     0092                     	;# 
   150     0093                     	;# 
   151     0094                     	;# 
   152     0098                     	;# 
   153     0099                     	;# 
   154     009C                     	;# 
   155     009D                     	;# 
   156     009E                     	;# 
   157     009F                     	;# 
   158     010C                     	;# 
   159     010D                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     018C                     	;# 
   163     018D                     	;# 
   164     0006                     _PORTBbits	set	6
   165     0007                     _PORTCbits	set	7
   166     0087                     _TRISCbits	set	135
   167     0086                     _TRISBbits	set	134
   168                           
   169                           	psect	cinit
   170     07FC                     start_initialization:	
   171                           ; #config settings
   172                           
   173     07FC                     __initialization:
   174     07FC                     end_of_initialization:	
   175                           ;End of C runtime variable initialization code
   176                           
   177     07FC                     __end_of__initialization:
   178     07FC  0183               	clrf	3
   179     07FD  120A  118A  2FBC   	ljmp	_main	;jump to C main() function
   180                           
   181                           	psect	cstackCOMMON
   182     0070                     __pcstackCOMMON:
   183     0070                     ?_toggleLED:
   184     0070                     ??_toggleLED:	
   185                           ; 1 bytes @ 0x0
   186                           
   187     0070                     ?_main:	
   188                           ; 1 bytes @ 0x0
   189                           
   190                           
   191                           ; 1 bytes @ 0x0
   192     0070                     	ds	4
   193     0074                     toggleLED@buttonState:
   194                           
   195                           ; 1 bytes @ 0x4
   196     0074                     	ds	1
   197     0075                     ??_main:
   198     0075                     main@buttonState:	
   199                           ; 1 bytes @ 0x5
   200                           
   201                           
   202                           ; 2 bytes @ 0x5
   203     0075                     	ds	2
   204                           
   205                           	psect	maintext
   206     07BC                     __pmaintext:	
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 20 in file "checkpoint_2.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;  buttonState     2    5[COMMON] int 
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   221 ;; Tracked objects:
   222 ;;		On entry : B00/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   226 ;;      Params:         0       0       0       0       0
   227 ;;      Locals:         2       0       0       0       0
   228 ;;      Temps:          0       0       0       0       0
   229 ;;      Totals:         2       0       0       0       0
   230 ;;Total ram usage:        2 bytes
   231 ;; Hardware stack levels required when called: 1
   232 ;; This function calls:
   233 ;;		_toggleLED
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239     07BC                     _main:	
   240                           ;psect for function _main
   241                           
   242     07BC                     l572:	
   243                           ;incstack = 0
   244                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   245                           
   246                           
   247                           ;checkpoint_2.c: 21:     TRISBbits.TRISB0 = 0;
   248     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   249     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   250     07BE  1006               	bcf	6,0	;volatile
   251                           
   252                           ;checkpoint_2.c: 22:     TRISCbits.TRISC0 = 1;
   253     07BF  1407               	bsf	7,0	;volatile
   254     07C0                     l574:
   255                           
   256                           ;checkpoint_2.c: 24:     int buttonState = 0;
   257     07C0  01F5               	clrf	main@buttonState
   258     07C1  01F6               	clrf	main@buttonState+1
   259     07C2                     l576:
   260                           
   261                           ;checkpoint_2.c: 27:         toggleLED(&buttonState);
   262     07C2  3075               	movlw	(low (main@buttonState| 0))& (0+255)
   263     07C3  120A  118A  27CC  120A  118A  	fcall	_toggleLED
   264     07C8  2FC2               	goto	l576
   265     07C9  120A  118A  2800   	ljmp	start
   266     07CC                     __end_of_main:
   267                           
   268                           	psect	text1
   269     07CC                     __ptext1:	
   270 ;; *************** function _toggleLED *****************
   271 ;; Defined at:
   272 ;;		line 6 in file "checkpoint_2.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;  buttonState     1    wreg     PTR int 
   275 ;;		 -> main@buttonState(2), 
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  buttonState     1    4[COMMON] PTR int 
   278 ;;		 -> main@buttonState(2), 
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         1       0       0       0       0
   290 ;;      Temps:          4       0       0       0       0
   291 ;;      Totals:         5       0       0       0       0
   292 ;;Total ram usage:        5 bytes
   293 ;; Hardware stack levels used: 1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301     07CC                     _toggleLED:	
   302                           ;psect for function _toggleLED
   303                           
   304                           
   305                           ;incstack = 0
   306                           ; Regs used in _toggleLED: [wreg-fsr0h+status,2+status,0]
   307                           ;toggleLED@buttonState stored from wreg
   308     07CC  00F4               	movwf	toggleLED@buttonState
   309     07CD                     l566:
   310                           
   311                           ;checkpoint_2.c: 7:     if (PORTCbits.RC0 == 0) {
   312     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   313     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   314     07CF  1807               	btfsc	7,0	;volatile
   315     07D0  2FD2               	goto	u11
   316     07D1  2FD3               	goto	u10
   317     07D2                     u11:
   318     07D2  2FEB               	goto	l11
   319     07D3                     u10:
   320     07D3                     l568:
   321                           
   322                           ;checkpoint_2.c: 9:         *buttonState = !(*buttonState);
   323     07D3  0874               	movf	toggleLED@buttonState,w
   324     07D4  0084               	movwf	4
   325     07D5  0800               	movf	0,w
   326     07D6  00F0               	movwf	??_toggleLED
   327     07D7  0A84               	incf	4,f
   328     07D8  0800               	movf	0,w
   329     07D9  00F1               	movwf	??_toggleLED+1
   330     07DA  0870               	movf	??_toggleLED,w
   331     07DB  0471               	iorwf	??_toggleLED+1,w
   332     07DC  1903               	btfsc	3,2
   333     07DD  2FDF               	goto	u21
   334     07DE  2FE1               	goto	u20
   335     07DF                     u21:
   336     07DF  3001               	movlw	1
   337     07E0  2FE2               	goto	u30
   338     07E1                     u20:
   339     07E1  3000               	movlw	0
   340     07E2                     u30:
   341     07E2  00F2               	movwf	??_toggleLED+2
   342     07E3  01F3               	clrf	??_toggleLED+3
   343     07E4  0874               	movf	toggleLED@buttonState,w
   344     07E5  0084               	movwf	4
   345     07E6  0872               	movf	??_toggleLED+2,w
   346     07E7  0080               	movwf	0
   347     07E8  0A84               	incf	4,f
   348     07E9  0873               	movf	??_toggleLED+3,w
   349     07EA  0080               	movwf	0
   350     07EB                     l11:	
   351                           ;checkpoint_2.c: 10:     }
   352                           
   353                           
   354                           ;checkpoint_2.c: 13:     if (*buttonState == 1) {
   355     07EB  0874               	movf	toggleLED@buttonState,w
   356     07EC  0084               	movwf	4
   357     07ED  0800               	movf	0,w
   358     07EE  00F0               	movwf	??_toggleLED
   359     07EF  0A84               	incf	4,f
   360     07F0  0800               	movf	0,w
   361     07F1  00F1               	movwf	??_toggleLED+1
   362     07F2  0370               	decf	??_toggleLED,w
   363     07F3  0471               	iorwf	??_toggleLED+1,w
   364     07F4  1D03               	btfss	3,2
   365     07F5  2FF7               	goto	u41
   366     07F6  2FF8               	goto	u40
   367     07F7                     u41:
   368     07F7  2FFA               	goto	l12
   369     07F8                     u40:
   370     07F8                     l570:
   371                           
   372                           ;checkpoint_2.c: 14:         PORTBbits.RB0 = 1;
   373     07F8  1406               	bsf	6,0	;volatile
   374                           
   375                           ;checkpoint_2.c: 15:     } else {
   376     07F9  2FFB               	goto	l14
   377     07FA                     l12:
   378                           
   379                           ;checkpoint_2.c: 16:         PORTBbits.RB0 = 0;
   380     07FA  1006               	bcf	6,0	;volatile
   381     07FB                     l14:
   382     07FB  0008               	return
   383     07FC                     __end_of_toggleLED:
   384     007E                     btemp	set	126	;btemp
   385     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    toggleLED@buttonState	PTR int  size(1) Largest target is 2
		 -> main@buttonState(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_toggleLED

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                              5 COMMON     2     2      0
                          _toggleLED
 ---------------------------------------------------------------------------------
 (1) _toggleLED                                            5     5      0      75
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _toggleLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jan 29 19:56:52 2024

                     l11 07EB                       l12 07FA                       l14 07FB  
                     u10 07D3                       u11 07D2                       u20 07E1  
                     u21 07DF                       u30 07E2                       u40 07F8  
                     u41 07F7                      l570 07F8                      l572 07BC  
                    l566 07CD                      l574 07C0                      l568 07D3  
                    l576 07C2                      fsr0 0004                      indf 0000  
                   _main 07BC                     btemp 007E                     start 0000  
                  ?_main 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07CC                   ??_main 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070     toggleLED@buttonState 0074  
             __pmaintext 07BC                  __ptext1 07CC     end_of_initialization 07FC  
      __end_of_toggleLED 07FC                _PORTBbits 0006                _PORTCbits 0007  
              _TRISBbits 0086                _TRISCbits 0087      start_initialization 07FC  
              ___latbits 0002                _toggleLED 07CC          main@buttonState 0075  
             ?_toggleLED 0070              ??_toggleLED 0070  
