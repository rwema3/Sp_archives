

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jan 28 15:18:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0009                     _PORTE	set	9
   169     0008                     _PORTD	set	8
   170     0007                     _PORTC	set	7
   171     0006                     _PORTB	set	6
   172     0005                     _PORTA	set	5
   173     0081                     _OPTION_REGbits	set	129
   174     0085                     _TRISA	set	133
   175     0089                     _TRISE	set	137
   176     0088                     _TRISD	set	136
   177     0087                     _TRISC	set	135
   178     0086                     _TRISB	set	134
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2F6F   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_initializePorts:
   195     0070                     ??_initializePorts:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ?_turnOnAllLEDs:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ?_turnOffAllLEDs:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_isButtonPressed:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     turnOnAllLEDs@port:	
   211                           ; 2 bytes @ 0x0
   212                           
   213     0070                     turnOffAllLEDs@port:	
   214                           ; 2 bytes @ 0x0
   215                           
   216                           
   217                           ; 2 bytes @ 0x0
   218     0070                     	ds	2
   219     0072                     ??_turnOnAllLEDs:
   220     0072                     ??_turnOffAllLEDs:	
   221                           ; 1 bytes @ 0x2
   222                           
   223     0072                     ??_isButtonPressed:	
   224                           ; 1 bytes @ 0x2
   225                           
   226                           
   227                           ; 1 bytes @ 0x2
   228     0072                     	ds	2
   229     0074                     ??_main:
   230                           
   231                           ; 1 bytes @ 0x4
   232     0074                     	ds	3
   233                           
   234                           	psect	cstackBANK0
   235     0020                     __pcstackBANK0:
   236     0020                     main@portB:
   237                           
   238                           ; 2 bytes @ 0x0
   239     0020                     	ds	2
   240     0022                     main@portC:
   241                           
   242                           ; 2 bytes @ 0x2
   243     0022                     	ds	2
   244     0024                     main@portD:
   245                           
   246                           ; 2 bytes @ 0x4
   247     0024                     	ds	2
   248     0026                     main@portE:
   249                           
   250                           ; 2 bytes @ 0x6
   251     0026                     	ds	2
   252                           
   253                           	psect	maintext
   254     076F                     __pmaintext:	
   255 ;;
   256 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   257 ;;
   258 ;; *************** function _main *****************
   259 ;; Defined at:
   260 ;;		line 30 in file "checkpoint_2.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  portE           2    6[BANK0 ] PTR unsigned char 
   265 ;;		 -> PORTE(1), 
   266 ;;  portD           2    4[BANK0 ] PTR unsigned char 
   267 ;;		 -> PORTD(1), 
   268 ;;  portC           2    2[BANK0 ] PTR unsigned char 
   269 ;;		 -> PORTC(1), 
   270 ;;  portB           2    0[BANK0 ] PTR unsigned char 
   271 ;;		 -> PORTB(1), 
   272 ;;  portA           2    0        PTR unsigned char 
   273 ;;		 -> PORTA(1), 
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : B00/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   283 ;;      Params:         0       0       0       0       0
   284 ;;      Locals:         0       8       0       0       0
   285 ;;      Temps:          3       0       0       0       0
   286 ;;      Totals:         3       8       0       0       0
   287 ;;Total ram usage:       11 bytes
   288 ;; Hardware stack levels required when called: 1
   289 ;; This function calls:
   290 ;;		_initializePorts
   291 ;;		_isButtonPressed
   292 ;;		_turnOffAllLEDs
   293 ;;		_turnOnAllLEDs
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299     076F                     _main:	
   300                           ;psect for function _main
   301                           
   302     076F                     l628:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   305                           
   306                           
   307                           ;checkpoint_2.c: 31:     char *portB = &PORTB;
   308     076F  3000               	movlw	0
   309     0770  1283               	bcf	3,5	;RP0=0, select bank0
   310     0771  1303               	bcf	3,6	;RP1=0, select bank0
   311     0772  00A1               	movwf	main@portB+1
   312     0773  3006               	movlw	6
   313     0774  00A0               	movwf	main@portB
   314                           
   315                           ;checkpoint_2.c: 32:     char *portC = &PORTC;
   316     0775  3000               	movlw	0
   317     0776  00A3               	movwf	main@portC+1
   318     0777  3007               	movlw	7
   319     0778  00A2               	movwf	main@portC
   320                           
   321                           ;checkpoint_2.c: 33:     char *portD = &PORTD;
   322     0779  3000               	movlw	0
   323     077A  00A5               	movwf	main@portD+1
   324     077B  3008               	movlw	8
   325     077C  00A4               	movwf	main@portD
   326                           
   327                           ;checkpoint_2.c: 34:     char *portE = &PORTE;
   328     077D  3000               	movlw	0
   329     077E  00A7               	movwf	main@portE+1
   330     077F  3009               	movlw	9
   331     0780  00A6               	movwf	main@portE
   332     0781  0805               	movf	5,w	;volatile
   333     0782                     l630:
   334                           
   335                           ;checkpoint_2.c: 37:     initializePorts();
   336     0782  120A  118A  2756  120A  118A  	fcall	_initializePorts
   337     0787                     l41:	
   338                           ;checkpoint_2.c: 39:     while(1) {
   339                           
   340                           
   341                           ;checkpoint_2.c: 40:         if (isButtonPressed()) {
   342     0787  120A  118A  2760  120A  118A  	fcall	_isButtonPressed
   343     078C  0870               	movf	?_isButtonPressed,w
   344     078D  0471               	iorwf	?_isButtonPressed+1,w
   345     078E  1903               	btfsc	3,2
   346     078F  2F91               	goto	u61
   347     0790  2F92               	goto	u60
   348     0791                     u61:
   349     0791  2FCC               	goto	l636
   350     0792                     u60:
   351     0792                     l632:
   352                           
   353                           ;checkpoint_2.c: 41:             turnOnAllLEDs(portB);
   354     0792  1283               	bcf	3,5	;RP0=0, select bank0
   355     0793  1303               	bcf	3,6	;RP1=0, select bank0
   356     0794  0820               	movf	main@portB,w
   357     0795  00F0               	movwf	turnOnAllLEDs@port
   358     0796  0821               	movf	main@portB+1,w
   359     0797  00F1               	movwf	turnOnAllLEDs@port+1
   360     0798  120A  118A  274E  120A  118A  	fcall	_turnOnAllLEDs
   361                           
   362                           ;checkpoint_2.c: 42:             turnOnAllLEDs(portC);
   363     079D  1283               	bcf	3,5	;RP0=0, select bank0
   364     079E  1303               	bcf	3,6	;RP1=0, select bank0
   365     079F  0822               	movf	main@portC,w
   366     07A0  00F0               	movwf	turnOnAllLEDs@port
   367     07A1  0823               	movf	main@portC+1,w
   368     07A2  00F1               	movwf	turnOnAllLEDs@port+1
   369     07A3  120A  118A  274E  120A  118A  	fcall	_turnOnAllLEDs
   370                           
   371                           ;checkpoint_2.c: 43:             turnOnAllLEDs(portD);
   372     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   373     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   374     07AA  0824               	movf	main@portD,w
   375     07AB  00F0               	movwf	turnOnAllLEDs@port
   376     07AC  0825               	movf	main@portD+1,w
   377     07AD  00F1               	movwf	turnOnAllLEDs@port+1
   378     07AE  120A  118A  274E  120A  118A  	fcall	_turnOnAllLEDs
   379                           
   380                           ;checkpoint_2.c: 44:             turnOnAllLEDs(portE);
   381     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   382     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   383     07B5  0826               	movf	main@portE,w
   384     07B6  00F0               	movwf	turnOnAllLEDs@port
   385     07B7  0827               	movf	main@portE+1,w
   386     07B8  00F1               	movwf	turnOnAllLEDs@port+1
   387     07B9  120A  118A  274E  120A  118A  	fcall	_turnOnAllLEDs
   388     07BE                     l634:
   389                           
   390                           ;checkpoint_2.c: 45:             _delay((unsigned long)((500)*(20000000/4000.0)));
   391     07BE  300D               	movlw	13
   392     07BF  00F6               	movwf	??_main+2
   393     07C0  30AF               	movlw	175
   394     07C1  00F5               	movwf	??_main+1
   395     07C2  30B6               	movlw	182
   396     07C3  00F4               	movwf	??_main
   397     07C4                     u77:
   398     07C4  0BF4               	decfsz	??_main,f
   399     07C5  2FC4               	goto	u77
   400     07C6  0BF5               	decfsz	??_main+1,f
   401     07C7  2FC4               	goto	u77
   402     07C8  0BF6               	decfsz	??_main+2,f
   403     07C9  2FC4               	goto	u77
   404     07CA  0000               	nop
   405                           
   406                           ;checkpoint_2.c: 46:         } else {
   407     07CB  2F87               	goto	l41
   408     07CC                     l636:
   409                           
   410                           ;checkpoint_2.c: 47:             turnOffAllLEDs(portB);
   411     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   412     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   413     07CE  0820               	movf	main@portB,w
   414     07CF  00F0               	movwf	turnOffAllLEDs@port
   415     07D0  0821               	movf	main@portB+1,w
   416     07D1  00F1               	movwf	turnOffAllLEDs@port+1
   417     07D2  120A  118A  2747  120A  118A  	fcall	_turnOffAllLEDs
   418                           
   419                           ;checkpoint_2.c: 48:             turnOffAllLEDs(portC);
   420     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   421     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   422     07D9  0822               	movf	main@portC,w
   423     07DA  00F0               	movwf	turnOffAllLEDs@port
   424     07DB  0823               	movf	main@portC+1,w
   425     07DC  00F1               	movwf	turnOffAllLEDs@port+1
   426     07DD  120A  118A  2747  120A  118A  	fcall	_turnOffAllLEDs
   427                           
   428                           ;checkpoint_2.c: 49:             turnOffAllLEDs(portD);
   429     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   430     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   431     07E4  0824               	movf	main@portD,w
   432     07E5  00F0               	movwf	turnOffAllLEDs@port
   433     07E6  0825               	movf	main@portD+1,w
   434     07E7  00F1               	movwf	turnOffAllLEDs@port+1
   435     07E8  120A  118A  2747  120A  118A  	fcall	_turnOffAllLEDs
   436                           
   437                           ;checkpoint_2.c: 50:             turnOffAllLEDs(portE);
   438     07ED  1283               	bcf	3,5	;RP0=0, select bank0
   439     07EE  1303               	bcf	3,6	;RP1=0, select bank0
   440     07EF  0826               	movf	main@portE,w
   441     07F0  00F0               	movwf	turnOffAllLEDs@port
   442     07F1  0827               	movf	main@portE+1,w
   443     07F2  00F1               	movwf	turnOffAllLEDs@port+1
   444     07F3  120A  118A  2747  120A  118A  	fcall	_turnOffAllLEDs
   445     07F8  2F87               	goto	l41
   446     07F9  120A  118A  2800   	ljmp	start
   447     07FC                     __end_of_main:
   448                           
   449                           	psect	text1
   450     074E                     __ptext1:	
   451 ;; *************** function _turnOnAllLEDs *****************
   452 ;; Defined at:
   453 ;;		line 16 in file "checkpoint_2.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  port            2    0[COMMON] PTR unsigned char 
   456 ;;		 -> PORTE(1), PORTD(1), PORTC(1), PORTB(1), 
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr0l, fsr0h
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         2       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0
   471 ;;      Totals:         2       0       0       0       0
   472 ;;Total ram usage:        2 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481     074E                     _turnOnAllLEDs:	
   482                           ;psect for function _turnOnAllLEDs
   483                           
   484     074E                     l620:	
   485                           ;incstack = 0
   486                           ; Regs used in _turnOnAllLEDs: [wregfsr0]
   487                           
   488                           
   489                           ;checkpoint_2.c: 17:     *port = 0xFF;
   490     074E  0870               	movf	turnOnAllLEDs@port,w
   491     074F  0084               	movwf	4
   492     0750  1783               	bsf	3,7
   493     0751  1C71               	btfss	turnOnAllLEDs@port+1,0
   494     0752  1383               	bcf	3,7
   495     0753  30FF               	movlw	255
   496     0754  0080               	movwf	0
   497     0755                     l30:
   498     0755  0008               	return
   499     0756                     __end_of_turnOnAllLEDs:
   500                           
   501                           	psect	text2
   502     0747                     __ptext2:	
   503 ;; *************** function _turnOffAllLEDs *****************
   504 ;; Defined at:
   505 ;;		line 21 in file "checkpoint_2.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  port            2    0[COMMON] PTR unsigned char 
   508 ;;		 -> PORTE(1), PORTD(1), PORTC(1), PORTB(1), 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, fsr0l, fsr0h, status,2
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         2       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0
   523 ;;      Totals:         2       0       0       0       0
   524 ;;Total ram usage:        2 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533     0747                     _turnOffAllLEDs:	
   534                           ;psect for function _turnOffAllLEDs
   535                           
   536     0747                     l622:	
   537                           ;incstack = 0
   538                           ; Regs used in _turnOffAllLEDs: [wreg-fsr0h+status,2]
   539                           
   540                           
   541                           ;checkpoint_2.c: 22:     *port = 0x00;
   542     0747  0870               	movf	turnOffAllLEDs@port,w
   543     0748  0084               	movwf	4
   544     0749  1783               	bsf	3,7
   545     074A  1C71               	btfss	turnOffAllLEDs@port+1,0
   546     074B  1383               	bcf	3,7
   547     074C  0180               	clrf	0
   548     074D                     l33:
   549     074D  0008               	return
   550     074E                     __end_of_turnOffAllLEDs:
   551                           
   552                           	psect	text3
   553     0760                     __ptext3:	
   554 ;; *************** function _isButtonPressed *****************
   555 ;; Defined at:
   556 ;;		line 26 in file "checkpoint_2.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  2    0[COMMON] int 
   563 ;; Registers used:
   564 ;;		wreg
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         2       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0
   572 ;;      Temps:          2       0       0       0       0
   573 ;;      Totals:         4       0       0       0       0
   574 ;;Total ram usage:        4 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583     0760                     _isButtonPressed:	
   584                           ;psect for function _isButtonPressed
   585                           
   586     0760                     l624:	
   587                           ;incstack = 0
   588                           ; Regs used in _isButtonPressed: [wreg]
   589                           
   590                           
   591                           ;checkpoint_2.c: 27:     return (PORTA & 0x10) == 0;
   592     0760  1283               	bcf	3,5	;RP0=0, select bank0
   593     0761  1303               	bcf	3,6	;RP1=0, select bank0
   594     0762  1E05               	btfss	5,4	;volatile
   595     0763  2F65               	goto	u41
   596     0764  2F67               	goto	u40
   597     0765                     u41:
   598     0765  3001               	movlw	1
   599     0766  2F68               	goto	u50
   600     0767                     u40:
   601     0767  3000               	movlw	0
   602     0768                     u50:
   603     0768  00F2               	movwf	??_isButtonPressed
   604     0769  01F3               	clrf	??_isButtonPressed+1
   605     076A  0872               	movf	??_isButtonPressed,w
   606     076B  00F0               	movwf	?_isButtonPressed
   607     076C  0873               	movf	??_isButtonPressed+1,w
   608     076D  00F1               	movwf	?_isButtonPressed+1
   609     076E                     l36:
   610     076E  0008               	return
   611     076F                     __end_of_isButtonPressed:
   612                           
   613                           	psect	text4
   614     0756                     __ptext4:	
   615 ;; *************** function _initializePorts *****************
   616 ;; Defined at:
   617 ;;		line 6 in file "checkpoint_2.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644     0756                     _initializePorts:	
   645                           ;psect for function _initializePorts
   646                           
   647     0756                     l614:	
   648                           ;incstack = 0
   649                           ; Regs used in _initializePorts: [wreg+status,2]
   650                           
   651                           
   652                           ;checkpoint_2.c: 7:     TRISB = 0x00;
   653     0756  1683               	bsf	3,5	;RP0=1, select bank1
   654     0757  1303               	bcf	3,6	;RP1=0, select bank1
   655     0758  0186               	clrf	6	;volatile
   656                           
   657                           ;checkpoint_2.c: 8:     TRISC = 0x00;
   658     0759  0187               	clrf	7	;volatile
   659                           
   660                           ;checkpoint_2.c: 9:     TRISD = 0x00;
   661     075A  0188               	clrf	8	;volatile
   662                           
   663                           ;checkpoint_2.c: 10:     TRISE = 0x00;
   664     075B  0189               	clrf	9	;volatile
   665     075C                     l616:
   666                           
   667                           ;checkpoint_2.c: 11:     TRISA = 0x10;
   668     075C  3010               	movlw	16
   669     075D  0085               	movwf	5	;volatile
   670     075E                     l618:
   671                           
   672                           ;checkpoint_2.c: 12:     OPTION_REGbits.nRBPU = 0;
   673     075E  1381               	bcf	1,7	;volatile
   674     075F                     l27:
   675     075F  0008               	return
   676     0760                     __end_of_initializePorts:
   677     007E                     btemp	set	126	;btemp
   678     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      8       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main@portA	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    main@portB	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    main@portC	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    main@portD	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    main@portE	PTR unsigned char  size(2) Largest target is 1
		 -> PORTE(SFR0[1]), 

    turnOffAllLEDs@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), PORTE(SFR0[1]), 

    turnOnAllLEDs@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), PORTE(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_isButtonPressed

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     833
                                              4 COMMON     3     3      0
                                              0 BANK0      8     8      0
                    _initializePorts
                    _isButtonPressed
                     _turnOffAllLEDs
                      _turnOnAllLEDs
 ---------------------------------------------------------------------------------
 (1) _turnOnAllLEDs                                        2     0      2     326
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _turnOffAllLEDs                                       2     0      2     326
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _isButtonPressed                                      4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initializePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initializePorts
   _isButtonPressed
   _turnOffAllLEDs
   _turnOnAllLEDs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jan 28 15:18:34 2024

       ?_isButtonPressed 0070                       l30 0755                       l33 074D  
                     l41 0787                       l27 075F                       l36 076E  
                     u40 0767                       u41 0765                       u50 0768  
                     u60 0792                       u61 0791                       u77 07C4  
                    l620 074E                      l614 0756                      l622 0747  
                    l630 0782                      l616 075C                      l624 0760  
                    l632 0792                      l618 075E                      l634 07BE  
                    l636 07CC                      l628 076F                      fsr0 0004  
                    indf 0000                     _main 076F                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
      ??_initializePorts 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070            _turnOnAllLEDs 074E  
         _OPTION_REGbits 0081               __pmaintext 076F          _initializePorts 0756  
         ?_turnOnAllLEDs 0070        turnOnAllLEDs@port 0070                  __ptext1 074E  
                __ptext2 0747                  __ptext3 0760                  __ptext4 0756  
   end_of_initialization 07FC  __end_of_initializePorts 0760          ??_turnOnAllLEDs 0072  
      ??_isButtonPressed 0072      start_initialization 07FC           _turnOffAllLEDs 0747  
       ?_initializePorts 0070                ___latbits 0002   __end_of_turnOffAllLEDs 074E  
          __pcstackBANK0 0020          ?_turnOffAllLEDs 0070          _isButtonPressed 0760  
              main@portB 0020                main@portC 0022                main@portD 0024  
              main@portE 0026    __end_of_turnOnAllLEDs 0756  __end_of_isButtonPressed 076F  
       ??_turnOffAllLEDs 0072       turnOffAllLEDs@port 0070  
